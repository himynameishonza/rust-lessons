searchState.loadedDescShard("getrandom", 0, "getrandom: system’s random number generator\nCodes at or above this point can be used by users to …\nThe platform-specific <code>errno</code> returned a non-positive value.\nA small and <code>no_std</code> compatible error type\nRDRAND instruction failed due to a hardware issue.\nCodes below this point represent OS Errors (i.e. positive …\nCall to <code>CCRandomGenerateBytes</code> failed on iOS, tvOS, or …\nNode.js does not have the <code>crypto</code> CommonJS module.\nCalled from an ES module on Node.js. This is unsupported, …\nCalling Node.js function <code>crypto.randomFillSync</code> failed.\nRDRAND instruction unsupported on this target.\nRNDR register read failed due to a hardware issue.\nRNDR register is not supported on this target.\nEncountered an unexpected situation which should not …\nThis target/platform is not supported by <code>getrandom</code>.\nOn VxWorks, call to <code>randSecure</code> failed (random number …\nThe environment does not support the Web Crypto API.\nCalling Web Crypto API <code>crypto.getRandomValues</code> failed.\nCalling Windows ProcessPrng failed.\nCall to Windows <code>RtlGenRandom</code> failed.\nFill <code>dest</code> with random bytes from the system’s preferred …\nFill potentially uninitialized buffer <code>dest</code> with random …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new instance of an <code>Error</code> from a particular …\nExtract the raw OS error code (if this error came from the …\nGet random <code>u32</code> from the system’s preferred random number …\nGet random <code>u64</code> from the system’s preferred random number …")